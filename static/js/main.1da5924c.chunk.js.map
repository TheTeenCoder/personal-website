{"version":3,"sources":["components/Navbar.js","routes/Home.js","components/Section.js","content/content.js","routes/About.js","components/Card.js","routes/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","home","about","projects","className","motion","li","whileHover","scale","rotate","boxShadow","transition","duration","to","Home","useState","list","index","setIndex","useEffect","timer","setTimeout","length","clearTimeout","div","initial","opacity","animate","Section","title","p","children","PROJECT_2","About","Card","href","link","Projects","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1da5924c.chunk.js","sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nconst Navbar = (props) => {\n  const { home, about, projects } = props;\n\n  return (\n    <div>\n      <div className=\"mt-5\">\n        <ol className=\"flex flex-row underline space-x-5 justify-center\">\n          {about && (\n            <motion.li\n              whileHover={{\n                scale: 1.2,\n                rotate: -15,\n                boxShadow: \"5px 5px 0 rgba(0, 0, 0, 0.2)\",\n                transition: { duration: 0.25 },\n              }}\n            >\n              <Link to=\"/about\">About.</Link>\n            </motion.li>\n          )}\n          {projects && (\n            <motion.li\n              whileHover={{\n                scale: 1.2,\n                rotate: -15,\n                boxShadow: \"5px 5px 0 rgba(0, 0, 0, 0.2)\",\n                transition: { duration: 0.25 },\n              }}\n            >\n              <Link to=\"/projects\">Projects.</Link>\n            </motion.li>\n          )}\n\n          {home && (\n            <motion.li\n              whileHover={{\n                scale: 1.2,\n                rotate: -15,\n                boxShadow: \"5px 5px 0 rgba(0, 0, 0, 0.2)\",\n                transition: { duration: 0.25 },\n              }}\n            >\n              <Link to=\"/\">Home.</Link>\n            </motion.li>\n          )}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"animate.css/animate.min.css\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\n\nconst Home = () => {\n  const [list] = useState([\n    \"dreamer 💭\",\n    \"basketball player 🏀\",\n    \"creator\",\n    \"coder 💻\",\n    \"pasta lover 🍝\",\n    \"minimalist 🔹\",\n  ]);\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      index === list.length - 1 ? setIndex(0) : setIndex(index + 1);\n    }, 2000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [index]);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1 }}\n    >\n      <div className=\"flex flex-col justify-center items-center h-screen\">\n        <motion.div\n          whileHover={{\n            scale: 1.2,\n            transition: { duration: 0.25 },\n          }}\n        >\n          <h1>\n            <span className=\"text-4xl md:text-6xl lg:text-8xl bg-clip-text text-transparent bg-gradient-to-r from-gray-800 to-teal-500\">\n              I am Mark Fang.\n            </span>\n          </h1>\n        </motion.div>\n        <span className=\"md:text-4xl text-gray-600 text-2xl\">\n          I am a <span className=\"font-bold font-mono\">{list[index]}</span>\n        </span>\n        <Navbar about projects />\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Home;\n","import { motion } from \"framer-motion\";\nimport React, { Children } from \"react\";\n\nconst Section = (props) => {\n  return (\n    <div className=\"container flex flex-col justify-center items-center p-4\">\n      <h1 className=\"md:text-2xl text-lg\">{props.title}</h1>\n      <div className=\"mt-5 max-w-xl\">\n        <motion.p className=\"md:text-lg text-sm \">{props.children}</motion.p>\n      </div>\n    </div>\n  );\n};\n\nexport default Section;\n","export const WHO_AM_I = `\n  Hi! I'm Mark Fang. I am currently a student living in St. Louis in middle school. \n  If you don't see me coding, napping, or writing, you can usually see me shooting \n  some hoops in the driveway. If you happen to see me in St. Louis, say hi to me. Don't worry, I don't bite!\n`\n\nexport const PROJECTS_INTRO = `\n  I am an avid coder. I love to create websites, command line interfaces, and other awesome \n  sh*t. I'm not always a couch potato, here are some of my projects I created. \n`\n\nexport const PROJECT_1 = `\n  I go to mandarin language school on Sundays. I noticed that their COVID check-in system is super slow.\n  So I created a website that helps our school check-in faster with custom QR codes. \n`\n\nexport const PROJECT_2 = `\n  The website you are viewing right now is one of my projects! My personal website is created with \n  React, Tailwind CSS, and Framer Motion.\n`\n\nexport const PROJECT_3 = `\n  I created a CRUD website sort of like linktr.ee, where you can introduce yourself with a link. Disclaimer: \n  The Project is not in production yet. \n`","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"animate.css/animate.min.css\";\nimport Section from \"../components/Section\";\nimport { WHO_AM_I } from \"../content/content\";\nimport Navbar from \"../components/Navbar\";\n\nconst About = () => {\n  return (\n    <div className=\"\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      >\n        <div className=\"flex flex-col justify-center items-center h-screen\">\n          <Navbar projects home />\n          <motion.div\n            whileHover={{\n              rotate: 5,\n              transition: { duration: 0.25 },\n            }}\n            className=\"mt-5\"\n          >\n            <h1 className=\"text-4xl sm:text-6xl md:text-8xl lg:text-8xl lg:text-9xl\">\n              <span className=\" bg-clip-text text-transparent bg-gradient-to-r from-gray-800 to-teal-500\">\n                About Me.\n              </span>\n            </h1>\n          </motion.div>\n          <div className=\"flex flex-col\">\n            <Section title=\"Who am I?\">{WHO_AM_I}</Section>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Card = (props) => {\n  return (\n    <a href={props.link} className={`${props.link && 'cursor-pointer'}`}>\n      <div className=\"hover:bg-blue-700 p-4 text-white bg-blue-500 shadow-xl flex flex-col rounded-xl\">\n        <h1 className=\"md:text-2xl text-xl\">{props.title}</h1>\n        <div className=\"md:text-lg text-xs mt-5\">{props.children}</div>\n      </div>\n    </a>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"animate.css/animate.min.css\";\nimport Section from \"../components/Section\";\nimport { PROJECTS_INTRO, PROJECT_1, PROJECT_2 } from \"../content/content\";\nimport Navbar from \"../components/Navbar\";\nimport Card from \"../components/Card\";\n\nconst Projects = () => {\n\n  return (\n    <div className=\"\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      >\n        <div className=\"flex flex-col justify-center items-center h-screen p-5\">\n          <Navbar about home />\n          <motion.div\n            whileHover={{\n              rotate: 5,\n              transition: { duration: 0.25 },\n            }}\n            className=\"mt-5\"\n          >\n            <h1 className=\"text-4xl sm:text-6xl md:text-8xl lg:text-8xl lg:text-9xl\">\n              <span className=\" bg-clip-text text-transparent bg-gradient-to-r from-gray-800 to-teal-500\">\n                Projects.\n              </span>\n            </h1>\n          </motion.div>\n          <div className=\"flex flex-col\">\n            <Section title=\"Projects are Everything!\">{PROJECTS_INTRO}</Section>\n            <div className=\"flex flex-col space-y-2 max-w-xl\">\n              <Card link=\"https://check-in-prj2.vercel.app/\" title=\"SLMCS Check-in System\">{PROJECT_1}</Card>\n              <Card link=\"/\" title=\"Personal Website\">{PROJECT_2}</Card>\n              <Card title=\"PAAS\">{PROJECT_2}</Card>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport \"./styles/styles.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\n\nimport './styles/App.css'\nimport Projects from \"./routes/Projects\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/projects\">\n          <Projects />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}